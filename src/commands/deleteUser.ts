import { Context } from "telegraf";
import { deleteSession, setSession } from "../stores/session";
import { queryDb, runDb } from "../stores/database";

// üìå L·ªánh x√≥a user
export const deleteUserCommand = async (ctx: Context) => {
  const userId = ctx.from?.id;
  if (!userId) return;

  await setSession(userId, { action: "delete_user" });

  try {
    const row = await queryDb(
      `SELECT * FROM users WHERE user_id = ? AND role = 0`,
      [userId],
    );

    if (!row || row.length === 0) {
      await deleteSession(userId);
      return ctx.reply("üö´ B·∫°n kh√¥ng c√≥ quy·ªÅn x√≥a ng∆∞·ªùi d√πng.");
    }

    return ctx.reply("üîç Vui l√≤ng nh·∫≠p ID ng∆∞·ªùi d√πng c·∫ßn x√≥a.");
  } catch (err) {
    console.error("‚ùå DB Error:", err);
    await deleteSession(userId);
    return ctx.reply("‚ö†Ô∏è L·ªói khi truy v·∫•n database. Vui l√≤ng th·ª≠ l·∫°i sau.");
  }
};

// üìå X√≥a user
export const deleteUser = async (ctx: Context | any) => {
  const userId = ctx.from?.id;
  const messageText = ctx.message?.text?.trim();

  // Ki·ªÉm tra ID h·ª£p l·ªá (s·ªë, t·ª´ 5 ƒë·∫øn 10 ch·ªØ s·ªë)
  if (!messageText || !/^\d{5,10}$/.test(messageText)) {
    await deleteSession(userId);
    return ctx.reply(
      "üö´ ID ng∆∞·ªùi d√πng kh√¥ng h·ª£p l·ªá. Vui l√≤ng nh·∫≠p s·ªë t·ª´ 5 ƒë·∫øn 10 ch·ªØ s·ªë.",
    );
  }

  const deleteUserId = parseInt(messageText, 10);

  try {
    const existingUser = await queryDb(
      `SELECT * FROM users WHERE user_id = ?`,
      [deleteUserId],
    );

    if (!existingUser || existingUser.length === 0) {
      await deleteSession(userId);
      return ctx.reply("‚ö†Ô∏è Ng∆∞·ªùi d√πng kh√¥ng t·ªìn t·∫°i trong h·ªá th·ªëng.");
    }

    await runDb(`DELETE FROM users WHERE user_id = ?`, [deleteUserId]);

    await deleteSession(userId);
    console.log(`‚úÖ Ng∆∞·ªùi d√πng v·ªõi ID ${deleteUserId} ƒë√£ b·ªã x√≥a.`);
    return ctx.reply(`‚úÖ Ng∆∞·ªùi d√πng v·ªõi ID ${deleteUserId} ƒë√£ b·ªã x√≥a.`);
  } catch (err) {
    console.error("‚ùå DB Error:", err);
    await deleteSession(userId);
    return ctx.reply("‚ö†Ô∏è L·ªói khi x√≥a ng∆∞·ªùi d√πng. Vui l√≤ng th·ª≠ l·∫°i.");
  }
};
